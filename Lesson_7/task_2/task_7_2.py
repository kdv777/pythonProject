# 2. [Задача со звездочкой]: усложненный вариант задания 1. Написать скрипт, создающий из config_2.yaml стартер для проекта
# Техническое задание
#
# Пример файла config_2.yaml можно скачать из прикрепленных к уроку файлов. Или его можно создать в любом текстовом
# редакторе «руками» (не программно).
# Не используйте библиотеки для работы с YAML, проведите парсинг вручную.
# Правильный парсинг yaml - интересная задача, но может быть сложной. В этой задаче примем: глубина иерархии в
# директории определяется количеством пробелов; отличие директории о файла выберите сами: например в имени файла будет
# точка или после имени директории стоит двоеточие.
# Подумайте о возможных исключениях при работе скрипта.

import os

with open('config_2.yaml', 'r') as f:
    # Количество элементов списка dir_path = максимальная глубина вложенности папок.
    dir_path = ['0', '1', '2', '3', '4', '5', '6']
    for dir_name in f:
        dir_name = dir_name.replace('\n', '').replace('- ', '')
        # Определяем объект это папка или файл.
        isdir = True if dir_name.endswith(':') else False
        # Вычисляем глубину вложенности папки.
        depth = int(dir_name.count(' ')/2)
        # Записываем в список имя папки согласно иерархии.
        dir_path[depth] = dir_name.replace(':', '').replace(' ', '')
        # Обрезаем лишний путь.
        full_dir_path = os.path.join(*dir_path[0:depth+1])
        if isdir:
            if not os.path.exists(full_dir_path):
                os.mkdir(full_dir_path)
        else:
            with open(full_dir_path, 'w') as f2:
                pass
