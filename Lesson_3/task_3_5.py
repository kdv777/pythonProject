# 5. Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов, взятых из трёх заданных списков.
# Техническое задание
#
# Функция должна вернуть список строк-шуток.
# Функция принимает 4 параметра: количество шуток и 3 списка со словами.
# В списках nouns, adverbs, adjectives не обязательно одинакое количество элементов. Они могут быть произвольной длины.
# Проверьте работу функции для количества шуток больше, чем длины списков слов и меньше.
# Сделайте вызов функции как с позиционными аргументами, так и с именованными.
# Менять исходные списки nouns, adverbs, adjectives нельзя. Это «side effects»
# Документируйте код функции.

from random import randrange

nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]


def get_jokes(num, list_1, list_2, list_3):  # Нормально ли так называть параметры функции?
    """ Функция, возвращающая n шуток, сформированных из трех случайных слов, взятых из трёх заданных списков."""
    jokes = []
    for i in range(num):
        joke_str = f'{list_1[randrange(len(list_1))]} {list_2[randrange(len(list_2))]} {list_3[randrange(len(list_3))]}'
        jokes.append(joke_str)
    return jokes


print(get_jokes(5, nouns, adverbs, adjectives))
print()

print(get_jokes(7, nouns, adverbs, adjectives))
print()

print(*get_jokes(4, list_1 = ["автомобиль", "лес", "огонь", "город", "дом"],
    list_2 = ["сегодня", "вчера", "завтра", "позавчера", "ночью"],
    list_3 = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]), sep='\n')
print()
for i in get_jokes(3, nouns, adverbs, adjectives):
    print(i)
print()
print('\n'.join(get_jokes(2, nouns, adverbs, adjectives)))