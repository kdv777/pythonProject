# 1. Создать класс TrafficLight (светофор).
# Техническое задание:
#
# Хорошо подумайте какие из атрибутов являются атрибутами экземпляра, а какие класса.
# + определить атрибут color (цвет) - приватный. Это текущий цвет светофора.
# + Определить метод state (состояние), возвращающий текущий цвет в виде строки.
# +определить метод running (запуск)
# в рамках метода реализовать переключение светофора в режимы(цвета): красный, жёлтый, зелёный.
# продолжительность первого состояния (красный) составляет 7 секунд, второго (жёлтый) — 2 секунды,
# третьего (зелёный) — на ваше усмотрение.
# Подумайте о том как хранить продолжительности. В виде какой структуры и в качестве атрибута чего?
# переключение между режимами должно осуществляться как у реального светофора: красный, жёлтый, зелёный, жёлтый, красный и т.д.
# метод многократно меняет текущий цвет светофора в соответствии с продолжительностями в секундах
# и печатает текущий цвет с помощью state.
# Предусмотреть разумное ограничение на количество итераций.
# Проверить работу примера, создав экземпляр и вызвав метод running.
# Примечание:
#
# Для реализации задержек времени можно воспользоваться функцией sleep пакета time
# Циклическое переключение просто реализовать с помощью cycle пакета itertools

import time
from itertools import cycle

class TrafficLight:

    __color ='off'
    colors = ['red', 'yellow', 'green', 'yellow']

    def __init__(self, duration = [7, 2, 5, 2]):
        self.duration = duration


    def state(self, __color):
        # print(self.__color)
        return self.__color


    def running(self, __color):
        i = cycle(self.colors)
        j = cycle(self.duration)
        for t in range(6):   # один цикл прохода = range(3)
            self.__color = next(i)
            print(TrafficLight.state(self, __color))
            time.sleep(next(j))
        return self.__color


trafficLight1 = TrafficLight()
trafficLight1.running(" ")


